@use 'styles/index.scss';

html {
  scroll-behavior: smooth;
}

body {
  font-size: var(--ff-default-size);
  font-family: var(--ff-family), serif;
  background-color: var(--background-color);
  transition: background-color 0.3s ease, color 0.3s ease;
  color: var(--text);
}

.page {
  display: flex;
  justify-content: center;
}

.container {
  max-width: 1440px;
  width: 100%;
  padding: 0 1rem;
  min-height: 100vh;
}

.gridLines {
  --col-count: 2;
  --gap: 1.5rem;
  --line-width: 1px;
  --col-width: calc((100% - (var(--gap) * (var(--col-count) - 1))) / var(--col-count));

  display: flex;
  flex-direction: column;
  position: relative;
  min-height: 100%;
  padding: 1rem 0;

  background-image: repeating-linear-gradient(
                  to right,
                  transparent var(--col-width),
                  var(--grid-color) calc(var(--col-width) + var(--line-width)),
                  transparent var(--col-width) calc(var(--col-width) + var(--gap)),
                  var(--grid-color) calc(var(--col-width) + var(--gap)),
                  transparent calc(var(--col-width) + var(--gap) + var(--line-width)),
                  transparent calc(100% - (var(--col-width) + var(--gap)) * (var(--col-count) - 2)),
  );

  &:after {
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0;
    width: 1px;
    background: var(--grid-color);
    opacity: 0.5;
  }
}

h1 {
  font-size: var(--step-4);
  line-height: 1.2;
  margin-top: 2rem;
}

p, ul, li {
  margin-top: 1.5rem;
  font-size: var(--step-0);
  line-height: 1.5;
}

a {
  color: var(--text-color);
  text-decoration: underline;
  text-underline-offset: 0.25rem;

  &:hover, &:focus {
    text-decoration-style: solid;
  }
}

.visually-hidden {
  display: none;
}

button > svg {
  pointer-events: none;
}

button.clean {
  border: none;
  background: none;
  padding: 0;
  cursor: pointer;
}

.hidden {
  display: none;
}

@media (min-width: 500px) {
  .gridLines {
    --col-count: 4;
  }
}

@media (min-width: 800px) {
  .container {
    padding: 0 2rem;
  }

  .gridLines {
    --col-count: 6;
  }
}

@media (min-width: 1172px) {
  .container {
    padding: 0 4rem;
  }

  .gridLines {
    --col-count: 8;
  }
}

/* POSTS */
.post {
  display: flex;
  align-items: center;
  flex-direction: column;

  /* style code around the web apart of table as it is styled with table from the lib */
  code:not(table code) {
    position: relative;
    padding: 0 0.5rem;
    display: inline-block;
    top: -1px;
    color: var(--text);
    line-height: 1.5;
    border-radius: 0.25rem;
    border: 1px solid var(--code-border-color);
    font-size: var(--step--1);
    font-family: var(--ff-code), serif;
    background: var(--code-background);
  }

  .codePen {
    margin-top: 1rem;
  }

  img {

  }

  .w50 {
    width: 100%;

    @media(min-width: 37.5rem) {
      width: 50%;
    }
  }

  > div {
    max-width: var(--post-width);
    width: 100%;
  }

  > div.large {
    max-width: var(--post-l-width);
    width: 100%;
  }

  h3 {
    margin-top: 2rem;
    font-size: var(--step-3);
  }

  p {
    margin-top: 1rem;
  }

  p img {
    margin-inline: auto;
  }

  p:has(img) {
    margin: 2rem 0;
    gap: 1.5rem;
  }

  tbody, td {
    background: var(--table-bg);
  }

  tr:nth-child(even) {
    background-color: var(--table-row-bg);
  }

  tr:nth-child(even) td {
    background:transparent;
  }

  table tr:last-child td {
    padding-bottom: 0;
  }

  a {
    padding: 0 4px;
    border-radius: 2px;
    font-size: var(--step-0);

    color: var(--link-color);
    background: var(--link-bg);
    transition: background-color 0.2s;

    &:hover, &:focus {
      background-color: var(--link-bg-hover);
    }
  }
}



